import SwiftUI

// Generated by Supernova - do not modify manually
extension Text {

    // UI

    func textStyleUi32Regular() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 32) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi32Extrabold() -> some View {
        return self
            .font(Font.custom("PoppinsExtraBold", size: 32) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi24Extrabold() -> some View {
        return self
            .font(Font.custom("PoppinsExtraBold", size: 24) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi14Regular() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 14) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi14Semibold() -> some View {
        return self
            .font(Font.custom("PoppinsSemiBold", size: 14) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12Regular() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12RegularUnderline() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12RegularItalic() -> some View {
        return self
            .font(Font.custom("PoppinsItalic", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12Medium() -> some View {
        return self
            .font(Font.custom("PoppinsMedium", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12Semibold() -> some View {
        return self
            .font(Font.custom("PoppinsSemiBold", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi12SemiboldCaps() -> some View {
        return self
            .font(Font.custom("PoppinsSemiBold", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi11Regular() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi11RegularCaps() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi11Semibold() -> some View {
        return self
            .font(Font.custom("PoppinsSemiBold", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi11SemiboldCaps() -> some View {
        return self
            .font(Font.custom("PoppinsSemiBold", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleUi11Medium() -> some View {
        return self
            .font(Font.custom("PoppinsMedium", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    // Text

    func textStyleText11Regular() -> some View {
        return self
            .font(Font.custom("PoppinsRegular", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleText11RegularItalic() -> some View {
        return self
            .font(Font.custom("PoppinsItalic", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    // Code

    func textStyleCode12Medium() -> some View {
        return self
            .font(Font.custom("Fira MonoMedium", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleCode12Regular() -> some View {
        return self
            .font(Font.custom("Fira MonoRegular", size: 12) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleCode11Medium() -> some View {
        return self
            .font(Font.custom("Fira MonoMedium", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleCode11MediumUnderline() -> some View {
        return self
            .font(Font.custom("Fira MonoMedium", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleCode11MediumItalic() -> some View {
        return self
            .font(Font.custom("Fira MonoRegular Italic", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleCode11Bold() -> some View {
        return self
            .font(Font.custom("Fira MonoBold", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    // Docs

    func textStyleDocs32Bold() -> some View {
        return self
            .font(Font.custom("RobotoBlack", size: 32) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs24Bold() -> some View {
        return self
            .font(Font.custom("RobotoBlack", size: 24) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs14Regular() -> some View {
        return self
            .font(Font.custom("RobotoRegular", size: 14) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs14Bold() -> some View {
        return self
            .font(Font.custom("RobotoBold", size: 14) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs20Bold() -> some View {
        return self
            .font(Font.custom("RobotoBlack", size: 20) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs11BoldCaps() -> some View {
        return self
            .font(Font.custom("RobotoBold", size: 11) 
            .underline() 
            .textCase(.uppercase) 
    }

    func textStyleDocs40Bold() -> some View {
        return self
            .font(Font.custom("RobotoBlack", size: 40) 
            .underline() 
            .textCase(.uppercase) 
    }
}